<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:contxt="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 扫描 service 包下面使用@Component/@Service/@Repository/@Controller 注解的类 将其实例化，放入容器中   -->
    <contxt:component-scan base-package="com.mecol.flower_shop.service" />

    <!--注入数据源-->
    <contxt:property-placeholder location="classpath:database.properties"></contxt:property-placeholder>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${user}" />
        <property name="password" value="${password}" />
        <!--<property name="minIdle" value="${minIdle}" />-->
        <!--<property name="maxIdle" value="${maxIdle}" />-->
        <property name="driverClass" value="${driverClassName}" />
        <property name="jdbcUrl" value="${url}" />
        <!--<property name="initialSize" value="${initialSize}" />-->
        <!--<property name="maxActive" value="${maxActive}" />-->
        <!--<property name="maxWait" value="${maxWait}" />-->
        <!--<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />-->
        <!--<property name="removeAbandoned" value="${removeAbandoned}" />-->

    </bean>
    <!--创建数据源-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
        <!--&lt;!&ndash; 数据库驱动 &ndash;&gt;-->
        <!--<property name="driverClass" value="com.mysql.jdbc.Driver" />-->
        <!--&lt;!&ndash; 数据库连接 &ndash;&gt;-->
        <!--<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/flower?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=CTT"/>-->
        <!--&lt;!&ndash; 数据库用户名 &ndash;&gt;-->
        <!--<property name="user" value="root"/>-->
        <!--&lt;!&ndash; 数据库密码 &ndash;&gt;-->
        <!--<property name="password" value="951203"/>-->
    <!--</bean>-->

    <!-- 配置mybatis  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源的实例化 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 映射 DML 语法 只要文件夹变蓝色 就是classpath 所以要有个mapper文件夹 下面所有的.xml都会映射-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!--加载mybatis自身的配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--配置pageHelper分页插件  -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <!-- 映射 数据访问层 ( dao ) 中的接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.mecol.flower_shop.dao"/>
    </bean>


    <!-- JDBC事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <!-- 启用支持annotation注解方式事务管理 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>

